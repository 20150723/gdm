AC_INIT(daemon/gdm.h)

AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(gdm,2.0beta5)
AM_MAINTAINER_MODE
AM_ACLOCAL_INCLUDE(macros)

GNOME_INIT

AC_ISC_POSIX
AC_PROG_CC
AC_STDC_HEADERS
AC_ARG_PROGRAM
AM_PROG_LIBTOOL

GNOME_X_CHECKS

AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)

dnl ## internationalization support
ALL_LINGUAS="ca cs da de el es et fi fr gl hu ja ko lt nl no pl pt_BR ru sl sv tr uk"
AM_GNOME_GETTEXT

AC_CHECK_FUNCS([setenv unsetenv])

# TCP Wrappers for XDMCP access control
AC_MSG_CHECKING("whether to use TCP wrappers")
LIBWRAP_PATH=""
for I in $LDFLAGS $LIBS -L/usr/lib; do
	case "$I" in
	-L*)
	THEFILE="`echo $I | sed -e 's,^-L,,'`"
	echo "From $I, checking in dir $THEFILE for libwrap.a" 1>&5
	if test -f $THEFILE/libwrap.a; then
		LIBWRAP_PATH=$THEFILE/libwrap.a
		echo "Found $LIBWRAP_PATH" 1>&5
		break
	fi
	esac
done

if test -n "$LIBWRAP_PATH"; then
        AC_MSG_RESULT(yes)
else
        AC_MSG_RESULT(no)
fi

if test -n "$LIBWRAP_PATH"; then
	nm $LIBWRAP_PATH | grep 'T setenv' && LIBWRAP_PATH=""
	if test -z "$LIBWRAP_PATH"; then
		echo "*********************************************************"
	        echo " You have a broken TCP wrappers library (setenv included)"
		echo " Please get the latest TCP wrappers package from your OS"
		echo " vendor, or recompile TCP wrappers to not include a"
		echo " setenv() implementation."
		echo
		echo "Not using TCP wrappers after all."
		echo "*********************************************************"
	else
                AC_DEFINE(HAVE_TCPWRAPPERS)
	fi
fi
LIBS="$LIBS $LIBWRAP_PATH"

dnl find out if we need -lnsl or whatever
LIB_NSL=
if test -n "$LIBWRAP_PATH"; then
        AC_MSG_CHECKING(whether -lwrap requires -lnsl)
        ORIG_LIBS="$LIBS"
        LIBS="$LIBWRAP_PATH $LIBS"
        AC_TRY_LINK([
#include <tcpd.h>
int allow_severity, deny_severity;
], [return hosts_access;], ,[
dnl try with -lnsl
OLD_LIBS="$LIBS"
LIBS="$LIBS -lnsl"
AC_TRY_LINK([
#include <tcpd.h>
int allow_severity, deny_severity;
], [return hosts_access;], LIB_NSL="-lnsl",
LIBWRAP_PATH="")
LIBS="$OLD_LIBS"
])
        LIBS="$ORIG_LIBS"
if test -n "$LIB_NSL"; then
        AC_MSG_RESULT(yes)
        LIBS="$LIBS $LIB_NSL"
else
        AC_MSG_RESULT(no)
fi
fi

dnl ## Autentication scheme
have_pam=no
VRFY="verify-crypt"
AC_CHECK_HEADERS(security/pam_appl.h, [
	have_pam=yes
        LIBS="$LIBS -lpam"
        VRFY="verify-pam"
        AC_DEFINE(HAVE_PAM)])

if test $have_pam = no; then

  # Check if -lcrypt is necessary
  AC_CHECK_LIB(crypt, crypt, [
  	      LIBS="$LIBS -lcrypt"])

  # Check if crypt lives in a separate header file
  AC_CHECK_HEADERS(crypt.h, [
		AC_DEFINE(HAVE_CRYPT)])

  # Check for shadow passwords (hack)
  AC_MSG_CHECKING("for /etc/shadow")

  if test -f /etc/shadow; then
	VRFY="verify-shadow"
	AC_MSG_RESULT(yes)
	AC_DEFINE(HAVE_SHADOW)
  else	
	AC_MSG_RESULT(no)
  fi

fi

AC_SUBST(VRFY)

AC_OUTPUT([
Makefile
daemon/Makefile
gui/Makefile
pixmaps/Makefile
macros/Makefile
config/Makefile
docs/Makefile
docs/C/Makefile
po/Makefile.in
intl/Makefile
stamp.h],[sed -e "/POTFILES =/r po/POTFILES" po/Makefile.in > po/Makefile])


